{"version":3,"sources":["file:///C:/Users/ffgdgrrr/Desktop/rpg/assets/UI/ChangeKey.ts"],"names":["_decorator","Component","Input","input","KeyCode","Label","sys","ccclass","property","ChangeKey","moveKey","canChangeKey","start","change","update","deltaTime","node","children","getComponent","string","getEnumName","parseInt","localStorage","getItem","KeyName","value","enumKeys","Object","keys","key","console","log","undefined","onLoad","document","addEventListener","event","code","on","EventType","KEY_DOWN","onKeyDown","KEY_UP","onKeyUp","onDestroy","off","keyCode","setItem","JSON","stringify","gaijianwei"],"mappings":"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","sourcesContent":["import { _decorator, Component, EventKeyboard, Input, input, KeyCode, Label, Node, macro, markAsWarning, sys } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('ChangeKey')\r\nexport class ChangeKey extends Component {\r\n    @property\r\n    KeyName:string=''\r\n    moveKey:KeyCode\r\n    canChangeKey: boolean;\r\n    start() {\r\n        this.change()\r\n        \r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    change(){\r\n        \r\n        this.node.children[0].getComponent(Label).string=this.getEnumName(parseInt(sys.localStorage.getItem(this.KeyName)))\r\n    }\r\n    getEnumName(value: KeyCode): string | undefined {\r\n        const enumKeys = Object.keys(KeyCode);\r\n        for (const key of enumKeys) {\r\n            if (KeyCode[key] === value) {\r\n                console.log(key)\r\n                return key;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    onLoad () {\r\n        document.addEventListener('keydown', (event)=> {\r\n            console.log(event.code);\r\n            });\r\n        input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        input.on(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n\r\n    onDestroy () {\r\n        input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\r\n        input.off(Input.EventType.KEY_UP, this.onKeyUp, this);\r\n    }\r\n    onKeyDown(event:EventKeyboard){\r\n        if(this.canChangeKey==true){\r\n            this.moveKey=event.keyCode\r\n            this.canChangeKey=false\r\n            this.node.children[0].getComponent(Label).string=this.getEnumName(this.moveKey)\r\n            sys.localStorage.setItem(this.KeyName,JSON.stringify(this.moveKey))\r\n            //console.log(parseInt(sys.localStorage.getItem(this.KeyName)))\r\n            \r\n        }\r\n    }\r\n    onKeyUp(event:EventKeyboard){\r\n        if(parseInt(sys.localStorage.getItem(this.KeyName))==event.keyCode){\r\n        }\r\n    }\r\n    gaijianwei(){\r\n        this.canChangeKey=true\r\n    }\r\n}\r\n\r\n\r\n"]}