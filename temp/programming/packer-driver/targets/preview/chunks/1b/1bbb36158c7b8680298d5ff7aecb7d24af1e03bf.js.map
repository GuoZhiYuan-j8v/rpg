{"version":3,"sources":["file:///C:/Users/ffgdgrrr/Desktop/rpg/assets/tools/%E7%83%B9%E9%A5%AA/foodMake.ts"],"names":["find","resources","Prefab","instantiate","_decorator","Component","Node","Button","bag","ccclass","property","foodList","Map","foodMake","start","checkCanMakeFood","foodArray","windows","children","forEach","element","i","push","name","length","node","getComponent","interactable","makeFood","isArrayEqual","arr1","arr2","sortedArr1","slice","sort","sortedArr2","_name","scheduleOnce","delete","console","log","destroyAllChildren","value","key","element2","load","err","res","prefab","setParent","烹饪队列","update","deltaTime"],"mappings":"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","sourcesContent":["import { find } from 'cc';\r\nimport { resources, Prefab, instantiate } from 'cc';\r\nimport { _decorator, Component, Node } from 'cc';\r\nimport { bag } from '../inventory/script/bag';\r\nimport { Button } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nexport let foodList:Map<string,string[][]>=new Map([\r\n    [\"土豆炒番茄\",[[\"Tomato\",\"Tomato\",\"Potato\",\"Potato\"],[\"Tomato\",\"Tomato\",\"Tomato\",\"Potato\"],[\"Tomato\",\"Potato\",\"Potato\",\"Potato\"]]],\r\n    [\"番茄汤\",[[\"Tomato\",\"Tomato\",\"Tomato\",\"Tomato\"]]],\r\n    [\"炸薯片\",[[\"Potato\",\"Potato\",\"Potato\",\"Potato\"]]],\r\n])\r\n@ccclass('foodMake')\r\nexport class foodMake extends Component {\r\n    @property(Node)\r\n    烹饪队列:Node=null!\r\n    @property(Node)\r\n    windows:Node=null!\r\n    start() {\r\n      this.checkCanMakeFood()\r\n    }\r\n    checkCanMakeFood(){\r\n      let foodArray:string[]=[];\r\n        this.windows.children.forEach((element,i)=>{\r\n          if(element.children[0]){\r\n            foodArray.push(element.children[0].name)\r\n          }\r\n            \r\n      })\r\n      if(foodArray.length>=4){\r\n        this.node.getComponent(Button).interactable=true\r\n      }else{\r\n        this.node.getComponent(Button).interactable=false\r\n      }\r\n    }\r\n    makeFood(){\r\n        function isArrayEqual(arr1: any[], arr2: any[]): boolean {\r\n            if (arr1.length !== arr2.length) {\r\n              return false;\r\n            }\r\n          \r\n            const sortedArr1 = arr1.slice().sort();\r\n            const sortedArr2 = arr2.slice().sort();\r\n          \r\n            for (let i = 0; i < arr1.length; i++) {\r\n              if (sortedArr1[i] !== sortedArr2[i]) {\r\n                return false;\r\n              }\r\n            }\r\n          \r\n            return true;\r\n          }\r\n        let foodArray:string[]=[];\r\n        this.windows.children.forEach((element,i)=>{\r\n            foodArray.push(element.children[0].name)\r\n              let _name=element.children[0].name\r\n              this.scheduleOnce(()=>{\r\n                find('Canvas/Camera/bag/view/content').getComponent(bag).delete(_name)\r\n              },0.1*i)\r\n            \r\n            console.log(element.children[0].name,'baggg')\r\n            element.destroyAllChildren()\r\n        })\r\n        console.log(foodList,foodArray)\r\n        foodList.forEach((value,key)=>{\r\n          value.forEach(element2=>{\r\n            if(isArrayEqual(foodArray,element2)==true){\r\n              resources.load('mezi/'+key,Prefab,(err,res)=>{\r\n                let prefab=instantiate(res)\r\n                prefab.setParent(this.烹饪队列)\r\n                console.log(prefab.name)\r\n            })\r\n            }\r\n          })\r\n            \r\n        })\r\n    }\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}